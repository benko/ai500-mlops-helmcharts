---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: ct-pipeline
spec:
  workspaces:
    - name: shared-workspace
    - name: model-workspace
  params:
    - name: APPLICATION_NAME
      type: string
      default: ""
    - name: PROJECT_NAME
      type: string
      default: ""
    - name: GIT_URL
      type: string
      default: ""
    - name: GIT_REVISION
      type: string
      default: "main"
    - name: GIT_REF
      type: string
      default: "refs/heads/main"
    - name: GIT_SHORT_REVISION
      type: string
      default: ""
    - name: GIT_BRANCH
      type: string
      default: ""
  tasks:
    - name: fetch-ds-pipeline-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: "$(params.GIT_URL)"
        - name: revision
          value: "main"
        - name: subdirectory
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
        - name: deleteExisting
          value: "true"
        - name: sslVerify
          value: "false"
    - name: execute-ds-pipeline
      taskRef:
        name: execute-ds-pipeline
        kind: Task
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: WORK_DIRECTORY
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)/3-prod_datascience"
        - name: APPLICATION_NAME
          value: "$(params.APPLICATION_NAME)"
        - name: GIT_SHORT_REVISION
          value: "$(params.GIT_SHORT_REVISION)"
      runAfter:
        - fetch-ds-pipeline-repository

# ModelCar step
    - name: build-modelcar
      taskRef:
        name: build-modelcar
        kind: Task
      runAfter:
        - execute-ds-pipeline
      workspaces:
        - name: output
          workspace: model-workspace
      params:
        - name: APPLICATION_NAME
          value: "$(params.APPLICATION_NAME)"
        - name: VERSION
          value: "$(params.GIT_SHORT_REVISION)"
        - name: PROJECT_NAME
          value: {{ .Values.USER_NAME }}

# Fetch GitOps repository
    - name: fetch-gitops-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: "https://{{ .Values.git_server }}/{{ .Values.USER_NAME }}/mlops-gitops.git"
        - name: revision
          value: "main"
        - name: subdirectory
          value: "mlops-gitops/main"
        - name: deleteExisting
          value: "true"
        - name: sslVerify
          value: "false"
      runAfter:
        - build-modelcar

# Raise PR for deployment 
    - name: deploy-test
      taskRef:
        name: deploy-or-raise-pr
        kind: Task
      runAfter:
        - fetch-gitops-repository
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: APPLICATION_NAME
          value: "$(params.APPLICATION_NAME)"
        - name: VERSION
          value: "$(params.GIT_SHORT_REVISION)"
        - name: WORK_DIRECTORY
          value: "mlops-gitops/main/model-deployments/"
        - name: DEPLOY_ENVIRONMENT
          value: "test"
        - name: PROJECT_NAME
          value: {{ .Values.USER_NAME }}