{{ if eq .Values.static_code_analysis true }}
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: static-code-analysis
spec:
  workspaces:
    - name: output
  params:
    - name: WORK_DIRECTORY
      description: Directory to start build in (handle multiple branches)
      type: string
    - name: sonarqube-auth
      optional: true
  steps:
  - name: linting
    workingDir: $(workspaces.output.path)/$(params.WORK_DIRECTORY)
    image: quay.io/rlundber/mlops-ct-cicd:0.4
    command: ["/bin/sh", "-c"]
    args:
    - |
      python3 -m pip install flake8 pylint black
      # üñ§ Check code formatting with Black üñ§
      black . --check-diff
      if [ $? -eq 1 ]; then
          echo "Code formatting check failed. Run 'black .' locally to fix."
          exit 1
        fi
      
      # ‚ùÑÔ∏è Lint with flake8 ‚ùÑÔ∏è
      # stop the build if there are Python syntax errors or undefined names
      flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      # # Lint with pylint
      # pylint $(git ls-files '*.py') --exit-zero

  - name: sonar-scan
    workingDir: $(workspaces.output.path)/$(params.WORK_DIRECTORY)
    image: quay.io/rlundber/mlops-ct-cicd:0.4
    command: ["/bin/sh", "-c"]
    args:
    - |
      python3 -m pip pysonar-scanner
      pysonar-scanner -Dsonar.host.url=http://sonarqube-sonarqube:9000 -Dsonar.projectKey=jukebox -Dsonar.login=$(cat $(workspaces.sonarqube-auth.path)/username) -Dsonar.password=$(cat $(workspaces.sonarqube-auth.path)/password)

{{- end }}