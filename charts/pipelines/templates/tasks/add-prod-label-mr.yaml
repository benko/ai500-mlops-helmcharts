---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: add-prod-label-mr
spec:
  params:
    - name: APPLICATION_NAME
      description: Name of the application
      type: string
    - name: PROJECT_NAME
      description: MLOps environment name :)
      type: string
    - name: DEPLOY_ENVIRONMENT
      description: Environment to deploy the app
      type: string
  steps:
    - name: update-model-metadata
      image: quay.io/rlundber/mlops-ct-cicd:0.4
      command: ["/bin/sh", "-c"]
      args:
      - |
        python3 -m pip install model-registry=="0.2.10"
        cat << 'EOF' | python3

        from os import environ
        import yaml
        from model_registry import ModelRegistry 

        # Path to your config.yaml file
        config_file = "model-deployments/prod/$(params.APPLICATION_NAME)/config.yaml"

        # Read and parse the YAML file
        with open(config_file, "r") as file:
            config_data = yaml.safe_load(file)

        # Extract the version
        app_version = config_data.get("version")

        namespace_file_path =\
          '/var/run/secrets/kubernetes.io/serviceaccount/namespace'
        with open(namespace_file_path, 'r') as namespace_file:
          namespace = namespace_file.read()
        
        environ["KF_PIPELINES_SA_TOKEN_PATH"] = "/var/run/secrets/kubernetes.io/serviceaccount/token"
  
        registry = ModelRegistry(server_address=f"https://{namespace}-registry-rest.{{ .Values.cluster_domain }}", port=443, author="$(params.GIT_COMMIT_AUTHOR)", is_secure=False)

        # print the version info of registered model
        version = registry.get_model_version("$(params.APPLICATION_NAME)", app_version)
        print("Model Version:", version, "with ID", version.id)

        # Add label
        version.custom_properties["prod"]=""

        # Update the metadata
        registry.update(version)

        # Update Model URI
        model = registry.get_model_artifact("$(params.APPLICATION_NAME)", app_version)"
        model.uri = f"oci://image-registry.openshift-image-registry.svc:5000/$(params.PROJECT_NAME)-prod/$(params.APPLICATION_NAME):{app_version}"
        registry.update(model)

        EOF