---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: minio-manage
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: minio-manage-rb
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: minio-manage
  namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-buckets
  annotations:
    argocd.argoproj.io/sync-wave: "3"
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  backoffLimit: 4
  template:
    spec:
      serviceAccount: minio-manage
      serviceAccountName: minio-manage
      containers:
      - name: create buckets
        image: image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        - -c
        - |
          echo -n "Waiting for minio pod in {{ .Release.Namespace }} namespace"
          while [ -z "$(oc get pod -l app=minio -o name 2>/dev/null)" ]; do
              echo -n '.'
              sleep 1
          done
          echo "Minio pod is running in {{ .Release.Namespace }} namespace"
          oc rsh `oc get pod -l app=minio -o name`
          {{ range $bucket := .Values.buckets }}
          mkdir /data/{{ .name }}
          echo "üçí{{ $bucket.name }} bucket is created."
          {{- end }}

